Import mojo2

Function QuickSort(arr:Int[], n:Int)
	Local tmp:Int = 0
	For Local i:Int = 0 To n-1
		For Local j:Int = i To n-1
			If arr[j] < arr[i]
				tmp = arr[i]
				arr[i] = arr[j]
				arr[j] = tmp
			EndIf
		Next
	Next			
End

Function bubble_sort(item:Int[], itemCount:Int)
	Local counter:Int = itemCount-1
	Local hasChanged:Int
	Repeat
		hasChanged = 0
		Local i:Int = 0
		While i < counter
			If item[i] > item[i + 1] 
				Local temp:Int = item[i]
				item[i] = item[i + 1]
				item[i + 1] = temp
				hasChanged = 1
			EndIf
			i = i + 1
		Wend
		
		counter = counter - 1
	Until hasChanged <> 1
End




Function Main:Int()             ' take nothing
    'Create an array of 1000 numbers
	Local arr1:Int[1000]
	Local arr2:Int[1000]
	
	'Add some random numbers to the Array
	'Local date := GetDate()
	'Seed = date[3] * 3600000 + date[4] * 60000 + date[5] * 1000 + date[6]
	
	For Local i:Int = 0 To 999
		arr1[i] = Rnd(1000)
		arr2[i] = arr1[i]
	Next
	
	
	Print "Quick Sort in Cerberus! .............."
	
	Local startTime:Float, endTime:Float, time_in_secs:Float
	'Get start time in milliseconds
	startTime = Millisecs()
	
	'Run the sort function on the array
	QuickSort(arr1, 1000) 
	'sorts an array of 10 numbers
	
	'Get the end time in milliseconds
	endTime = Millisecs()
	
	'Convert total runtime to seconds
	time_in_secs = (endTime - startTime) / 1000.0
	
	Print "Time: " + String(time_in_secs)
	Print "\n----------------------------------\n"
	
	Print "Bubble Sort in Cerberus! .............."
	
	'Get start time in milliseconds
	startTime = Millisecs()
	
	'Run the sort function on the array
	bubble_sort(arr2, 1000) 
	'sorts an array of 10 numbers
	
	'Get the end time in milliseconds
	endTime = Millisecs()
	
	'Convert total runtime to seconds
	time_in_secs = (endTime - startTime) / 1000.0
	
	Print "Time: " + String(time_in_secs)
	Print "\n\n"
	Return 0                    ' return 0 to indicate everything went fine
End
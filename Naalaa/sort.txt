procedure sort(&arr[], n)
	tmp = 0
	for i = 0 to n-1
		for j = i to n-1
			if arr[j] < arr[i]
				tmp = arr[i]
				arr[i] = arr[j]
				arr[j] = tmp
			endif
		next
	next		
endproc

procedure bubble_sort(&item[], itemCount)
	counter = itemCount-1
	hasChanged = 0	
	do
		hasChanged = 0
		i=0
		while i < counter
			if item[i] > item[i + 1] 
				temp = item[i]
				item[i] = item[i + 1]
				item[i + 1] = temp
				hasChanged = 1
			endif
			i = i + 1
		wend
		
		counter = counter - 1
		if hasChanged <> 1 then break
	loop
endproc


'Create an array of 1000 numbers
arr1[1000]
arr2[1000]

'Add some random numbers to the Array
randomize time()
for i = 0 to 999
	arr1[i] = rnd(1000)
	arr2[i] = arr1[i]
next


wln "Quick Sort in Naalaa! .............."

'Get start time in milliseconds
startTime = time()

'Run the sort function on the array
'sorts an array of 10 numbers
proc sort arr1, 1000

'Get the end time in milliseconds
endTime = time()

'Convert total runtime to seconds
t_in_secs# = (float#(endTime) - float#(startTime)) / 1000.0

wln "Time: ", t_in_secs#
wln "----------------------------------"
wln ""

wln "Bubble Sort in Naalaa! .............."

'Get start time in milliseconds
startTime = time()

'Run the sort function on the array
'sorts an array of 10 numbers
proc bubble_sort arr2, 1000

'Get the end time in milliseconds
endTime = time()

'Convert total runtime to seconds
t_in_secs# = (float#(endTime) - float#(startTime)) / 1000.0

wln "Time: ", t_in_secs#
wln ""
wln ""
wln ""

wait keydown